{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/confirmation-modal/confirmation-modal.component.ts","./src/app/confirmation-modal/confirmation-modal.component.html","./src/app/consumer-group-details/consumer-group-details.component.ts","./src/app/consumer-group-details/consumer-group-details.component.html","./src/app/consumer-groups.service.ts","./src/app/consumer-groups/consumer-groups.component.ts","./src/app/consumer-groups/consumer-groups.component.html","./src/app/error-modal/error-modal.component.ts","./src/app/error-modal/error-modal.component.html","./src/app/error-service.service.ts","./src/app/kafka-environment.service.ts","./src/app/kafka-environment/kafka-environment.component.ts","./src/app/kafka-environment/kafka-environment.component.html","./src/app/message-search/message-search.component.ts","./src/app/message-search/message-search.component.html","./src/app/message-sender/message-sender.component.ts","./src/app/message-sender/message-sender.component.html","./src/app/topic-details/topic-details.component.ts","./src/app/topic-details/topic-details.component.html","./src/app/topic.service.ts","./src/app/topic/topic.component.ts","./src/app/topic/topic.component.html","./src/app/utils/pulling.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { KafkaEnvironmentService } from './kafka-environment.service';\nimport { ActivatedRoute, Router, PRIMARY_OUTLET } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  applicationLoaded = false;\n\n  constructor(\n    public environmentService: KafkaEnvironmentService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.environmentService.loadEnvironment().subscribe(\n        result => {\n          this.applicationLoaded = result;\n        }\n      );\n    });\n  }\n}\n","<div *ngIf=\"applicationLoaded\">\n    <nav class=\"main-nav\">\n        <a routerLink=\"{{environmentService.getCurrentEnvironment()}}/topics\">Topics</a>\n        <a routerLink=\"{{environmentService.getCurrentEnvironment()}}/consumer-groups\">Consumer Group</a>\n        <a routerLink=\"{{environmentService.getCurrentEnvironment()}}/sender\">Message sender</a>\n        <a routerLink=\"{{environmentService.getCurrentEnvironment()}}/search\">Message search</a>\n        <app-kafka-environment></app-kafka-environment>\n    </nav>\n    <div class=\"main-container\">\n        <router-outlet></router-outlet>\n        <app-error-modal></app-error-modal>\n    </div>\n</div>\n\n<div *ngIf=\"!applicationLoaded\">\n    <p>Loading...</p>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TopicComponent } from './topic/topic.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ConsumerGroupsComponent } from './consumer-groups/consumer-groups.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TopicDetailsComponent } from './topic-details/topic-details.component';\nimport { ConsumerGroupDetailsComponent } from './consumer-group-details/consumer-group-details.component';\nimport { KafkaEnvironmentComponent } from './kafka-environment/kafka-environment.component';\nimport { ErrorModalComponent } from './error-modal/error-modal.component';\nimport { ConfirmationModalComponent } from './confirmation-modal/confirmation-modal.component';\nimport { MessageSenderComponent } from './message-sender/message-sender.component';\nimport { MessageSearchComponent } from './message-search/message-search.component';\n\nconst appRoutes: Routes = [\n  { path: ':environment/topics', component: TopicComponent },\n  { path: ':environment/topics/:name', component: TopicDetailsComponent },\n  { path: ':environment/consumer-groups', component: ConsumerGroupsComponent },\n  { path: ':environment/consumer-groups/:name', component: ConsumerGroupDetailsComponent },\n  { path: ':environment/sender', component: MessageSenderComponent },\n  { path: ':environment/search', component: MessageSearchComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopicComponent,\n    ConsumerGroupsComponent,\n    TopicDetailsComponent,\n    ConsumerGroupDetailsComponent,\n    KafkaEnvironmentComponent,\n    ErrorModalComponent,\n    ConfirmationModalComponent,\n    MessageSenderComponent,\n    MessageSearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(\n      appRoutes\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-confirmation-modal',\n  templateUrl: './confirmation-modal.component.html',\n  styleUrls: ['./confirmation-modal.component.css']\n})\nexport class ConfirmationModalComponent implements OnInit {\n\n  @Input() message: string;\n  @Input() buttonName: string;\n  @Output() confirmationResult = new EventEmitter<boolean>();\n\n  hidden = true;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  emitResult(accepted: boolean) {\n    this.confirmationResult.emit(accepted);\n    this.hidden = true;\n  }\n\n  showModal() {\n    this.hidden = false;\n  }\n\n}\n","<div class=\"confirmation\">\n    <button (click)=\"showModal()\">{{buttonName}}</button>\n    <div *ngIf=\"!hidden\" class=\"confirmation-modal\">\n        <div class=\"window\">\n            <p>{{message}}</p>\n            <button (click)=\"emitResult(true)\">Accept</button>\n            <button (click)=\"emitResult(false)\">Cancel</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ConsumerGroupsService } from '../consumer-groups.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { of, timer, Observable, Subscription } from 'rxjs';\nimport { map, mergeMap, tap, delay, repeat, catchError } from 'rxjs/operators';\nimport { pull, unsubscribe } from '../utils/pulling';\nimport { ErrorServiceService } from '../error-service.service';\n\n@Component({\n  selector: 'app-consumer-group-details',\n  templateUrl: './consumer-group-details.component.html',\n  styleUrls: ['./consumer-group-details.component.css']\n})\nexport class ConsumerGroupDetailsComponent implements OnInit, OnDestroy {\n\n  consumerGroup: ConsumerGroup;\n  consumerGroupMetaData: ConsumerGroupMetaData;\n  lagSum: number;\n  environment: string;\n  lastCGUpdate: number;\n  dataCollector: ConsumerGroupDataDiff;\n  private consumerGroupSubscription: Subscription;\n  private consumerGroupMDSubscription: Subscription;\n\n  constructor(\n    private consumerGroupsService: ConsumerGroupsService,\n    private route: ActivatedRoute,\n    private errorService: ErrorServiceService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.removeSubscribtions();\n      const name = params.name;\n      this.environment = params.environment;\n\n      const getter = () => this.consumerGroupsService.getConsumerGroup(name, this.environment);\n      const updater = (cg: ConsumerGroup) => {\n        this.dataCollector = this.calulcateConsumerGroupDataDiff(cg);\n        this.consumerGroup = cg;\n        this.lagSum = cg.partitions.map(it => it.lag).reduce((part, sum) => part + sum);\n        this.lastCGUpdate = Date.now();\n      };\n      this.consumerGroupSubscription = pull(getter, updater).subscribe();\n\n      const metaDataGetter = () => this.consumerGroupsService.getConsumerGroupMetaData(name, this.environment);\n      const metaDataUpdater = cg => this.consumerGroupMetaData = cg;\n      this.consumerGroupMDSubscription = pull(metaDataGetter, metaDataUpdater, 10000).subscribe();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.removeSubscribtions();\n  }\n\n  private removeSubscribtions() {\n    unsubscribe(this.consumerGroupSubscription);\n    unsubscribe(this.consumerGroupMDSubscription);\n  }\n\n  onConfirmation(shouldDelete: boolean) {\n    if (shouldDelete) {\n      this.delete();\n    }\n  }\n\n  delete() {\n    this.consumerGroupsService.deleteConsumerGroup(this.consumerGroup.name, this.environment)\n      .pipe(catchError(val => of(val.error)))\n      .subscribe(error => {\n        if (error) {\n          this.errorService.showError(error);\n        } else {\n          this.router.navigateByUrl('/' + this.environment + '/consumer-groups');\n        }\n      });\n  }\n\n  joinPartitionAssigments(assignments: TopicPartition[]): string {\n    return assignments.map(assignment => assignment.topic + '_' + assignment.partition).join(' | ');\n  }\n\n  calulcateConsumerGroupDataDiff(newConsumerGroup: ConsumerGroup): ConsumerGroupDataDiff {\n    if (this.consumerGroup === undefined) {\n      const lagDiffMap = new Map<Partition, LagData>();\n      newConsumerGroup.partitions.forEach(part => lagDiffMap.set(part.partition, { lagValue: 0, lagPerSecound: 0 }));\n      return {\n        messagesPerSec: 0,\n        lagPerSec: 0\n        // lagDiff: lagDiffMap\n      };\n    }\n    const timeDiffSec = (Date.now() - this.lastCGUpdate) / 1000;\n    const newMessages = this.messageCount(newConsumerGroup) - this.messageCount(this.consumerGroup);\n    const newLag = this.lagCount(newConsumerGroup) - this.lagCount(this.consumerGroup);\n    const messagesPerSec = Math.round((newMessages / timeDiffSec) * 100) / 100;\n    const lagPerSec = Math.round((newLag / timeDiffSec) * 100) / 100;\n\n    return {\n      messagesPerSec,\n      lagPerSec\n    };\n  }\n\n  private messageCount(consumerGroup: ConsumerGroup): number {\n    return consumerGroup.partitions.map(it => it.partition.lastLog).reduce((a, b) => a + b);\n  }\n\n  private lagCount(consumerGroup: ConsumerGroup): number {\n    return consumerGroup.partitions.map(it => it.lag).reduce((a, b) => a + b);\n  }\n\n}\n\ninterface ConsumerGroupDataDiff {\n  messagesPerSec: number;\n  lagPerSec: number;\n  // lagDiff: Map<Partition, LagData>;\n}\n\ninterface LagData {\n  lagValue: number;\n  lagPerSecound: number;\n}\n","<div *ngIf=\"consumerGroup !== undefined\">\n    <h2>{{consumerGroup.name}}</h2>\n    <table>\n        <tr>\n            <th>Total Lag</th>\n            <th>Lag increase per second</th>\n            <th>Message consumtion per second</th>\n        </tr>\n        <tr>\n            <td>{{lagSum}}</td>\n            <td>{{dataCollector.lagPerSec}}</td>\n            <td>{{dataCollector.messagesPerSec}}</td>\n        </tr>\n    </table>\n    <h2>Partitions</h2>\n\n    <table>\n        <tr>\n            <th>Name</th>\n            <th>Events count</th>\n            <th>Lag</th>\n        </tr>\n        <tr *ngFor=\"let partitionInfo of consumerGroup.partitions\">\n            <td>{{partitionInfo.partition.name}}</td>\n            <td>{{partitionInfo.partition.lastLog}}</td>\n            <td>{{partitionInfo.lag}}</td>\n        </tr>\n    </table>\n\n    <h2>Consumer group state</h2>\n    <div *ngIf=\"consumerGroupMetaData !== undefined\">\n        <table>\n            <tr>\n                <th>State</th>\n                <th>Partition assignor</th>\n                <th>Coordinator</th>\n            </tr>\n            <tr>\n                <td>{{consumerGroupMetaData.consumerGroupState}}</td>\n                <td>{{consumerGroupMetaData.partitionAssignor}}</td>\n                <td>{{consumerGroupMetaData.coordinator}}</td>\n            </tr>\n        </table>\n\n        <table>\n            <tr>\n                <th>Member id</th>\n                <th>Client id</th>\n                <th>Host</th>\n                <th>Assign partitions</th>\n            </tr>\n            <tr *ngFor=\"let memberDescription of consumerGroupMetaData.memberDescriptionList\">\n                <td>{{memberDescription.memberId}}</td>\n                <td>{{memberDescription.clientId}}</td>\n                <td>{{memberDescription.host}}</td>\n                <td>{{joinPartitionAssigments(memberDescription.assignment.topicPartitions)}}</td>\n            </tr>\n        </table>\n    </div>\n    <div *ngIf=\"consumerGroupMetaData === undefined\">\n        <p>Loading...</p>\n    </div>\n\n    <h2>Topics</h2>\n    <table>\n        <tr>\n            <th>Name</th>\n        </tr>\n        <tr *ngFor=\"let topic of consumerGroup.topicNames\">\n            <td><a routerLink=\"/{{environment}}/topics/{{topic}}\">{{topic}}</a></td>\n        </tr>\n    </table>\n    <app-confirmation-modal (confirmationResult)=\"onConfirmation($event)\"\n        message=\"Do you want to delete {{consumerGroup.name}} consumer group?\" buttonName=\"Delete\">\n    </app-confirmation-modal>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsumerGroupsService {\n\n  private url = 'http://localhost:8080/api/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  getConsumerGroupsNames(environment: string): Observable<string[]> {\n    return this.httpClient.get<string[]>(this.url + environment + '/consumer-groups');\n  }\n\n\n  getConsumerGroups(environment: string): Observable<ConsumerGroup[]> {\n    return this.httpClient.get<ConsumerGroup[]>(this.url + environment + '/consumer-groups');\n  }\n\n  getConsumerGroupMetaData(name: string, environment: string) {\n    return this.httpClient.get<ConsumerGroupMetaData>(this.url + environment + '/consumer-groups' + '/' + name + '/meta-data');\n  }\n\n  getConsumerGroup(name: string, environment: string): Observable<ConsumerGroup> {\n    return this.httpClient.get<ConsumerGroup>(this.url + environment + '/consumer-groups' + '/' + name);\n  }\n\n  deleteConsumerGroup(name: string, environment: string): Observable<any> {\n    return this.httpClient.delete(this.url + environment + '/consumer-groups' + '/' + name);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ConsumerGroupsService } from '../consumer-groups.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-consumer-groups',\n  templateUrl: './consumer-groups.component.html',\n  styleUrls: ['./consumer-groups.component.css']\n})\nexport class ConsumerGroupsComponent implements OnInit {\n\n  consumerGroups: ConsumerGroup[];\n  displayGroups: ConsumerGroup[];\n\n  constructor(\n    private consumerGroupsService: ConsumerGroupsService,\n    private route: ActivatedRoute\n  ) { }\n\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const environment = params.environment;\n\n      this.consumerGroupsService.getConsumerGroups(environment)\n        .subscribe(cGroups => {\n          this.consumerGroups = cGroups;\n          this.displayGroups = cGroups;\n        });\n    });\n  }\n\n  onFilterInput(event) {\n    const filterValue = event.target.value.toLowerCase();\n    if (filterValue === undefined || filterValue === '') {\n      this.displayGroups = this.consumerGroups;\n    } else {\n      this.displayGroups = this.consumerGroups.filter(cg => cg.name.toLowerCase().includes(filterValue));\n    }\n  }\n\n}\n","<div>\n    <div class=\"filter\">\n        <label for=\"filter-input\" class=\"filter-label\">Filter:</label>\n        <input id=\"filter-input\" class=\"filter-input\" (keyup)=\"onFilterInput($event)\"/>\n    </div>\n    <table>\n        <tr>\n            <th>Name</th>\n            <th>Topics</th>\n        </tr>\n        <tr *ngFor=\"let consumerGroup of displayGroups\">\n            <td><a routerLink=\"{{consumerGroup.name}}\">{{consumerGroup.name}}</a></td>\n            <td>{{consumerGroup.topicNames}}</td>\n        </tr>\n    </table>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ErrorServiceService } from '../error-service.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-error-modal',\n  templateUrl: './error-modal.component.html',\n  styleUrls: ['./error-modal.component.css']\n})\nexport class ErrorModalComponent implements OnInit, OnDestroy {\n\n  message = 'no error';\n  hidden = true;\n  private subscription: Subscription;\n  constructor(private errorServiceService: ErrorServiceService) { }\n\n  ngOnInit(): void {\n    console.log('subscribing to errors');\n    this.subscription = this.errorServiceService.subscriveToErrors(error => {\n      this.hidden = false;\n      this.message = error;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  closeModal() {\n    this.hidden = true;\n  }\n\n}\n","<div *ngIf=\"!hidden\" class=\"error-modal\">\n    <div class=\"window\">\n        <p>{{message}}</p>\n        <button (click)=\"closeModal()\">OK</button>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorServiceService {\n\n  private errorsStream = new Subject();\n\n  constructor() { }\n\n  showError(error: string) {\n    console.log('showing error' + error);\n    this.errorsStream.next(error);\n  }\n\n  subscriveToErrors(errorHandler: (error) => void) {\n    console.log('creating subscription for errors');\n    return this.errorsStream.subscribe(errorHandler);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KafkaEnvironmentService {\n\n  currentEnvironment: string;\n\n  private readonly serverUrl = 'http://localhost:8080/api';\n  private environments: KafkaEnvironment[];\n  constructor(\n    private httpClient: HttpClient,\n    private router: Router,\n  ) { }\n\n  getAwailableEnvironments(): Observable<KafkaEnvironment[]> {\n    return this.httpClient.get<KafkaEnvironment[]>(this.serverUrl + '/environments');\n  }\n\n  loadEnvironment(): Observable<boolean> {\n    return this.getAwailableEnvironments()\n      .pipe(\n        tap(environments => this.environments = environments),\n        map(_ => true)\n      );\n  }\n\n\n  getCurrentEnvironment(): string {\n    const rsult = this.router.url.split('/')[1] || this.environments[0].name;\n    return decodeURI(rsult);\n  }\n\n\n}\n\nexport interface KafkaEnvironment {\n  name: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { KafkaEnvironmentService, KafkaEnvironment } from '../kafka-environment.service';\nimport { Router, PRIMARY_OUTLET } from '@angular/router';\n\n@Component({\n  selector: 'app-kafka-environment',\n  templateUrl: './kafka-environment.component.html',\n  styleUrls: ['./kafka-environment.component.css']\n})\nexport class KafkaEnvironmentComponent implements OnInit {\n\n  selectedEnv: string;\n  environments: string[] = [];\n  constructor(\n    private kafkaEnvironmentService: KafkaEnvironmentService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.kafkaEnvironmentService.getAwailableEnvironments().subscribe(\n      it => this.environments = it.map(env => env.name)\n    );\n    this.selectedEnv = this.kafkaEnvironmentService.getCurrentEnvironment();\n  }\n\n  onSelectChange(event): void {\n    const envName = event.target.value;\n    this.selectedEnv = this.environments.filter(it => it === envName)[0];\n    const urlParts = this.router.url.split('/');\n    urlParts[1] = envName;\n    this.router.navigateByUrl(urlParts.join('/'));\n  }\n\n\n}\n","<div class=\"environment\">\n    <label for=\"environment\">Environments</label>\n        <select (change)=\"onSelectChange($event)\" id=\"environment\">\n            <option class=\"environment-option\" [selected]=\"env === selectedEnv\" *ngFor=\"let env of environments\">\n                {{env}}\n            </option>\n        </select>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorServiceService } from '../error-service.service';\nimport { TopicService } from '../topic.service';\n\n@Component({\n  selector: 'app-message-search',\n  templateUrl: './message-search.component.html',\n  styleUrls: ['./message-search.component.css']\n})\nexport class MessageSearchComponent implements OnInit {\n\n\n  topics: Topic[] = [];\n  selectedTopic: string;\n  message: string = \"\";\n  key: string = \"\";\n  environment: string;\n  foundMessage: string = \"loading...\";\n\n\n  constructor(\n    private topicService: TopicService,\n    private errorService: ErrorServiceService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.environment = params.environment;\n      this.topicService.getTopics(params.environment).subscribe(topics => {\n        this.topics = topics;\n        this.selectedTopic = topics[0].name;\n      })\n    })\n  }\n\n  onMessageInput() {\n    if (this.key !== \"\" || this.message !== \"\") {\n      this.topicService.findMessage(this.selectedTopic, this.environment, this.key, this.message)\n      .subscribe(response => {\n        if (typeof response === 'object') {\n          this.foundMessage = JSON.stringify(response);\n        } else {\n          this.foundMessage = response;\n        }\n      },\n        error => {\n          this.errorService.showError(error.error);\n        });\n    }\n  }\n\n}\n","<div class=\"message-finder\">\n    <label for=\"topics\">Topics</label>\n    <select [(ngModel)]=\"selectedTopic\" id=\"topics\">\n        <option class=\"topics-option\" [selected]=\"topic === selectedTopic\" *ngFor=\"let topic of topics\">\n            {{topic.name}}\n        </option>\n    </select>\n    <div>\n\n        <label>Key</label>\n        <input [(ngModel)]=\"key\" type=\"text\">\n    </div>\n    <div>\n\n        <label>Message</label>\n        <input [(ngModel)]=\"message\" type=\"text\">\n    </div>\n    <button class=\"button\" type=\"submit\" (click)=\"onMessageInput()\">Search</button>\n\n    <p>{{foundMessage}}</p>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TopicService } from '../topic.service';\nimport { FormBuilder } from '@angular/forms';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { ErrorServiceService } from '../error-service.service';\n\n@Component({\n  selector: 'app-message-sender',\n  templateUrl: './message-sender.component.html',\n  styleUrls: ['./message-sender.component.css']\n})\nexport class MessageSenderComponent implements OnInit {\n\n  topics: Topic[] = [];\n  selectedTopic: string;\n  message: string = \"\";\n  key: string = \"\";\n  environment: string;\n\n\n  constructor(\n    private topicService: TopicService,\n    private errorService: ErrorServiceService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.environment = params.environment;\n      this.topicService.getTopics(params.environment).subscribe(topics => {\n        this.topics = topics;\n        this.selectedTopic = topics[0].name;\n      })\n    })\n  }\n\n  onMessageInput() {\n    if (this.key !== \"\" && this.message !== \"\") {\n      this.topicService.sendMessage(this.selectedTopic, this.environment, this.key, this.message)\n        .pipe(catchError(val => of(val.error)))\n        .subscribe(error => {\n          if (error) {\n            this.errorService.showError(error);\n          } else {\n            console.log(\"Message was send\");\n          }\n        });\n    }\n  }\n\n}\n","<div class=\"message-sender\">\n    <label for=\"topics\">Topics</label>\n    <select [(ngModel)]=\"selectedTopic\" id=\"topics\">\n        <option class=\"topics-option\" [selected]=\"topic === selectedTopic\" *ngFor=\"let topic of topics\">\n            {{topic.name}}\n        </option>\n    </select>\n    <div>\n\n        <label>Key</label>\n        <input [(ngModel)]=\"key\" type=\"text\">\n    </div>\n    <div>\n\n        <label>Message</label>\n        <input [(ngModel)]=\"message\" type=\"text\">\n    </div>\n    <button class=\"button\" type=\"submit\" (click)=\"onMessageInput()\">Send</button>\n\n\n\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { TopicService } from '../topic.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { pull, unsubscribe } from '../utils/pulling';\nimport { Subscription, of } from 'rxjs';\nimport { ErrorServiceService } from '../error-service.service';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-topic-details',\n  templateUrl: './topic-details.component.html',\n  styleUrls: ['./topic-details.component.css']\n})\nexport class TopicDetailsComponent implements OnInit, OnDestroy {\n\n  private CONSUMER_GROUP_PULL_INTERVAL_MS = 30000;\n\n  topic: Topic;\n  consumerGroups: string[];\n  message: string;\n  environment: string;\n  messagesPerSec: number;\n  messageOffset = '0';\n  private lastUpdate: number;\n  private topicUpdateSubscription: Subscription;\n  private consumerGroupsUpdateSubscription: Subscription;\n\n  constructor(\n    private topicService: TopicService,\n    private route: ActivatedRoute,\n    private errorService: ErrorServiceService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n\n      const name = params.name;\n      this.environment = params.environment;\n      const getTopicDetails = () => this.topicService.getTopic(name, this.environment);\n      const getConsumerGroups = () => this.topicService.getConsumerGroupsForTopic(name, this.environment);\n\n      this.topicUpdateSubscription = pull(getTopicDetails,\n        topic => {\n          this.messagesPerSec = this.calculateMessagePerSec(topic);\n          this.lastUpdate = Date.now();\n          this.topic = topic;\n        }\n      ).subscribe();\n\n      this.consumerGroupsUpdateSubscription = pull(getConsumerGroups,\n        cGroups => this.consumerGroups = cGroups, this.CONSUMER_GROUP_PULL_INTERVAL_MS).subscribe();\n    });\n  }\n\n  ngOnDestroy(): void {\n    unsubscribe(this.topicUpdateSubscription);\n    unsubscribe(this.consumerGroupsUpdateSubscription);\n  }\n\n  getLastMessage(partition: Partition) {\n    this.topicService.getLastMessage(this.topic.name, partition.partitionNumber, this.environment)\n      .subscribe(message => {\n        if (typeof message === 'object') {\n          this.message = JSON.stringify(message);\n        } else {\n          this.message = message;\n        }\n      },\n        error => {\n          this.errorService.showError(error.error);\n        });\n  }\n\n  updateInput(event) {\n    this.messageOffset +=  event.target.value;\n  }\n\n  onDeleteConfirmation(shouldDelete: boolean) {\n    if (shouldDelete) {\n      this.delete();\n    }\n  }\n\n  delete() {\n    this.topicService.deleteTopic(this.topic.name, this.environment)\n      .pipe(catchError(val => of(val.error)))\n      .subscribe(error => {\n        if (error) {\n          this.errorService.showError(error);\n        } else {\n          this.router.navigateByUrl('/' + this.environment + '/topics');\n        }\n      });\n  }\n\n  calculateMessagePerSec(newTopicData: Topic): number {\n    if (this.topic === undefined) {\n      return 0;\n    } else {\n      const newMessages = (newTopicData.messages - this.topic.messages);\n      const secPassed = (Date.now() - this.lastUpdate) / 1000;\n      return Math.round((newMessages / secPassed) * 100) / 100;\n    }\n  }\n\n}\n","<div *ngIf=\"topic !== undefined\">\n    <div class=\"topic-info\">\n        <p><strong>Topic name:</strong> {{topic.name}}</p>\n        <p><strong>Topic events count:</strong> {{topic.messages}}</p>\n        <p><strong>Topic partitions count:</strong> {{topic.partitionCount}}</p>\n        <p><strong>Messages per second:</strong> {{messagesPerSec}}</p>\n    </div>\n\n    <h2>Partitions</h2>\n    <table>\n        <tr>\n            <th>Name</th>\n            <th>Events count</th>\n            <th></th>\n        </tr>\n        <tr *ngFor=\"let partition of topic.partitions\">\n            <td>{{partition.name}}</td>\n            <td>{{partition.lastLog}}</td>\n            <td><button (click)=\"getLastMessage(partition)\">Last message</button></td>\n        </tr>\n    </table>\n\n    <div id=\"lastMessageBox\">\n        <p>{{message}}</p>\n    </div>\n\n    <h2>Consumer groups</h2>\n    <div *ngIf=\"consumerGroups !== undefined\">\n        <table>\n            <tr>\n                <th>Name</th>\n            </tr>\n            <tr *ngFor=\"let consumerGroup of consumerGroups\">\n                <td><a routerLink=\"/{{environment}}/consumer-groups/{{consumerGroup}}\">{{consumerGroup}}</a></td>\n            </tr>\n        </table>\n    </div>\n    <div *ngIf=\"consumerGroups === undefined\">\n        <p>Loading...</p>\n    </div>\n\n    <app-confirmation-modal (confirmationResult)=\"onDeleteConfirmation($event)\"\n        message=\"Do you want to delete {{topic.name}} topic ?\" buttonName=\"Delete\">\n    </app-confirmation-modal>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { KafkaEnvironmentService } from './kafka-environment.service';\nimport { toBase64String } from '@angular/compiler/src/output/source_map';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopicService {\n\n  private serverUrl = 'http://localhost:8080/api/';\n  constructor(\n    private httpClient: HttpClient,\n    private kafkaEnvironmentService: KafkaEnvironmentService\n  ) { }\n\n  getTopics(environment: string): Observable<Topic[]> {\n    return this.httpClient.get<Topic[]>(this.serverUrl + environment + '/topics');\n  }\n\n  getTopic(name: string, environment: string): Observable<Topic> {\n    return this.httpClient.get<Topic>(this.serverUrl + environment + '/topics/' + name);\n  }\n\n  getConsumerGroupsForTopic(\n    topicName: string,\n    environment: string): Observable<string[]> {\n    return this.httpClient.get<string[]>(this.serverUrl + environment + '/topics/' + topicName + '/consumer-groups');\n  }\n\n  getLastMessage(topic: string, partitionNumber: number, environment: string): Observable<string> {\n    const url = this.serverUrl + environment + '/topics/' + topic + '/' + partitionNumber + '/lastMessage';\n    return this.httpClient.get(url,\n      { responseType: 'text' });\n  }\n\n  deleteTopic(topic: string, environment: string): Observable<any> {\n    const url = this.serverUrl + environment + '/topics/' + topic;\n    return this.httpClient.delete(url);\n  }\n\n  sendMessage(topic: string, environment: string, key: string, message: string): Observable<any> {\n    const url = this.serverUrl + environment + '/topics/' + topic + \"/send\";\n    return this.httpClient.post(url, {\n      key: key,\n      value: btoa(message)\n    });\n  }\n\n  findMessage(topic: string, environment: string, key: string, message: string): Observable<any> {\n    const url = this.serverUrl + environment + '/topics/' + topic + \"/find\";\n    if (key === undefined || key.trim() === \"\") {\n      return this.httpClient.post(url, {\n        queryType: \"Message\",\n        value: btoa(message.trim()),\n        from: Date.now() - 1000 * 60 * 60, // 60min\n        to: Date.now()\n      });\n    } else if (message === undefined || message.trim() === \"\") {\n      return this.httpClient.post(url, {\n        queryType: \"Key\",\n        value: btoa(key.trim()),\n        from: Date.now() - 1000 * 60 * 60, // 60min\n        to: Date.now()\n      });\n    } else {\n      return this.httpClient.post(url, {\n        queryType: \"KeyAndMessage\",\n        value: {\n          key: btoa(key.trim()),\n          message:  btoa(message.trim())\n        },\n        from: Date.now() - 1000 * 60 * 60, // 60min\n        to: Date.now()\n      });\n    }\n\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TopicService } from '../topic.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-topic',\n  templateUrl: './topic.component.html',\n  styleUrls: ['./topic.component.css']\n})\nexport class TopicComponent implements OnInit {\n\n  topics: Topic[] = [];\n  displayTopics: Topic[] = [];\n  constructor(\n    private topicService: TopicService,\n    private route: ActivatedRoute) {}\n\n  onFilterInput(event) {\n    const filterValue = event.target.value.toLowerCase();\n    if (filterValue === undefined || filterValue === '') {\n      this.displayTopics = this.topics;\n    } else {\n      this.displayTopics = this.topics.filter(topic => topic.name.toLowerCase().includes(filterValue));\n    }\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.topicService.getTopics(params.environment)\n      .subscribe(topics => {\n        this.topics = topics;\n        this.displayTopics = topics;\n      });\n    });\n  }\n\n  partitionString(topic: Topic): string {\n    return topic.partitions.map(it => it.name).toString();\n  }\n\n}\n","<div>\n    <div class=\"filter\">\n        <label for=\"filter-input\" class=\"filter-label\">Filter:</label>\n        <input id=\"filter-input\" class=\"filter-input\" (keyup)=\"onFilterInput($event)\"/>\n    </div>\n    <table>\n        <tr>\n            <th>Name</th>\n            <th>Messages</th>\n            <th>Partitions</th>\n        </tr>\n        <tr *ngFor=\"let topic of displayTopics\">\n            <td><a routerLink=\"{{topic.name}}\">{{topic.name}}</a></td>\n            <td>{{topic.messages}}</td>\n            <td>{{topic.partitionCount}}</td>\n        </tr>\n    </table>\n</div>","import { Observable, of, Subscription } from 'rxjs';\r\nimport { mergeMap, tap, repeat, delay } from 'rxjs/operators';\r\n\r\nexport function pull<T>(getter: () => Observable<T>, updater: (T) => void, delayMs: number = 1000): Observable<any> {\r\n    return of({}).pipe(\r\n        mergeMap(_ => getter()),\r\n        tap(updater),\r\n        delay(delayMs),\r\n        repeat()\r\n    );\r\n\r\n}\r\n\r\nexport function unsubscribe(subscription: Subscription) {\r\n    if (subscription) {\r\n        subscription.unsubscribe();\r\n    }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}